{"ast":null,"code":"import _regeneratorRuntime from\"/home/gavril.hasmasan/Desktop/rt-rt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gavril.hasmasan/Desktop/rt-rt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{GET_POSTS}from\"./types\";import{clearGlobalNotifications,errorNotification,succesNotification}from\"./notificationActions\";export var getPosts=function getPosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://jsonplaceholder.typicode.com/posts\");case 3:response=_context.sent;dispatch({type:GET_POSTS,payload:response.data});dispatch(succesNotification());dispatch(clearGlobalNotifications());_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch(errorNotification(_context.t0.message));dispatch(clearGlobalNotifications());case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/gavril.hasmasan/Desktop/rt-rt/src/store/actions/postsActions.ts"],"names":["axios","GET_POSTS","clearGlobalNotifications","errorNotification","succesNotification","getPosts","dispatch","get","response","type","payload","data","message"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,SAAT,KAAyC,SAAzC,CACA,OACEC,wBADF,CAEEC,iBAFF,CAGEC,kBAHF,KAIO,uBAJP,CAMA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAOC,QAAP,qKAEHN,CAAAA,KAAK,CAACO,GAAN,CACrB,4CADqB,CAFG,QAEpBC,QAFoB,eAK1BF,QAAQ,CAAC,CACPG,IAAI,CAAER,SADC,CAEPS,OAAO,CAAEF,QAAQ,CAACG,IAFX,CAAD,CAAR,CAIAL,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACAE,QAAQ,CAACJ,wBAAwB,EAAzB,CAAR,CAV0B,+EAY1BI,QAAQ,CAACH,iBAAiB,CAAC,YAAES,OAAH,CAAlB,CAAR,CACAN,QAAQ,CAACJ,wBAAwB,EAAzB,CAAR,CAb0B,oEAAN,gEAAjB","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { GET_POSTS, PostsDispatch } from \"./types\";\nimport {\n  clearGlobalNotifications,\n  errorNotification,\n  succesNotification,\n} from \"./notificationActions\";\n\nexport const getPosts = () => async (dispatch: Dispatch<any>) => {\n  try {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/posts\"\n    );\n    dispatch({\n      type: GET_POSTS,\n      payload: response.data,\n    });\n    dispatch(succesNotification());\n    dispatch(clearGlobalNotifications());\n  } catch (e) {\n    dispatch(errorNotification(e.message));\n    dispatch(clearGlobalNotifications());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
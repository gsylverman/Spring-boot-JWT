{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gavril.hasmasan/Desktop/rt-rt/src/components/Contact/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Contact = () => {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n\n  const requestDataWithTokenValidation = e => {\n    e.preventDefault();\n    fetch();\n  };\n\n  const fetch = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/v1/data\", {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: requestDataWithTokenValidation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Token:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setToken(e.target.value),\n        type: \"text\",\n        placeholder: \"token\",\n        value: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Request data with token validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"C3x6IM/dtuvVeI3WyBYezJO1bgU=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/gavril.hasmasan/Desktop/rt-rt/src/components/Contact/index.tsx"],"names":["axios","useState","Contact","token","setToken","requestDataWithTokenValidation","e","preventDefault","fetch","response","get","headers","Authorization","console","log","data","error","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,MAAMC,OAA+B,GAAG,MAAM;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMI,8BAA8B,GAClCC,CADqC,IAElC;AACHA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK;AACN,GALD;;AAOA,QAAMA,KAAK,GAAG,YAAY;AACxB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,mCAAV,EAA+C;AACpEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYT;AADpB;AAD2D,OAA/C,CAAvB;AAKAU,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAArB;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAXD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEX,8BAAhB;AAAA,4BACE;AAAA,wCAEE;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV,CAD3B;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,KAAK,EAAEf;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvCD;;GAAMD,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nexport interface ContactProps {}\n\nconst Contact: React.FC<ContactProps> = () => {\n  const [token, setToken] = useState<string>(\"\");\n\n  const requestDataWithTokenValidation = (\n    e: React.FormEvent<HTMLFormElement>\n  ) => {\n    e.preventDefault();\n    fetch();\n  };\n\n  const fetch = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/v1/data\", {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <form onSubmit={requestDataWithTokenValidation}>\n      <div>\n        Token:\n        <input\n          onChange={(e) => setToken(e.target.value)}\n          type=\"text\"\n          placeholder=\"token\"\n          value={token}\n        />\n      </div>\n      <div>\n        <input type=\"submit\" value=\"Request data with token validation\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}